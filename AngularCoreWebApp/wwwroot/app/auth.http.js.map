{"version":3,"sources":["auth.http.ts"],"names":["AuthHttp","http","this","authKey","prototype","get","url","opts","configureAuth","post","data","put","delete","item","localStorage","getItem","auth","JSON","parse","console","log","access_token","headers","http_1","Headers","set","__decorate","core_1","Injectable","exports_1"],"mappings":"q1BAIAA,SAAA,WAII,QAAAA,UAAYC,MAHZC,KAAAD,KAAa,KACLC,KAAAC,QAAU,OAGdD,KAAKD,KAAOA,KAsCpB,MAnCID,UAAAI,UAAAC,IAAA,SAAIC,IAAKC,MAEL,MAFK,UAAAA,OAAAA,SACLL,KAAKM,cAAcD,MACZL,KAAKD,KAAKI,IAAIC,IAAKC,OAG9BP,SAAAI,UAAAK,KAAA,SAAKH,IAAKI,KAAMH,MAEZ,MAFY,UAAAA,OAAAA,SACZL,KAAKM,cAAcD,MACZL,KAAKD,KAAKQ,KAAKH,IAAKI,KAAMH,OAGrCP,SAAAI,UAAAO,IAAA,SAAIL,IAAKI,KAAMH,MAEX,MAFW,UAAAA,OAAAA,SACXL,KAAKM,cAAcD,MACZL,KAAKD,KAAKU,IAAIL,IAAKI,KAAMH,OAGpCP,SAAAI,UAAAQ,OAAA,SAAON,IAAKC,MAER,MAFQ,UAAAA,OAAAA,SACRL,KAAKM,cAAcD,MACZL,KAAKD,KAAKW,OAAON,IAAKC,OAGzBP,SAAAI,UAAAI,cAAR,SAAsBD,MAElB,GAAIM,MAAOC,aAAaC,QAAQb,KAAKC,QACrC,IAAU,MAANU,KAAY,CACZ,GAAIG,MAAOC,KAAKC,MAAML,KACtBM,SAAQC,IAAIJ,MACa,MAArBA,KAAKK,eACe,MAAhBd,KAAKe,UACLf,KAAKe,QAAU,GAAIC,QAAAC,SAGvBjB,KAAKe,QAAQG,IAAI,gBAAiB,UAAUT,KAAKK,iBAxCjErB,SAAA0B,YAACC,OAAAC,yEACDC,UAAA,WAAA7B","file":"auth.http.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Http, Headers } from \"@angular/http\";\r\n\r\n@Injectable()\r\nexport class AuthHttp {\r\n    http: Http = null;\r\n    private authKey = \"auth\";\r\n\r\n    constructor(http: Http) {\r\n        this.http = http;\r\n    }\r\n\r\n    get(url, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.get(url, opts);\r\n    }\r\n\r\n    post(url, data, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.post(url, data, opts);\r\n    }\r\n\r\n    put(url, data, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.put(url, data, opts);\r\n    }\r\n\r\n    delete(url, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.delete(url, opts);\r\n    }\r\n\r\n    private configureAuth(opts: any) {\r\n\r\n        var item = localStorage.getItem(this.authKey);\r\n        if (item!=null) {\r\n            var auth = JSON.parse(item);\r\n            console.log(auth);\r\n            if (auth.access_token != null) {\r\n                if (opts.headers == null) {\r\n                    opts.headers = new Headers();\r\n                }\r\n\r\n                opts.headers.set(\"Authorization\", `Bearer ${auth.access_token}`);\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}
{"version":3,"sources":["item-list.component.ts"],"names":["ItemListComponent","itemService","router","this","prototype","ngOnInit","_this","strategy","class","title","getLatest","getMostVieved","getRandom","subscribe","items","error","errorMessage","onSelect","item","selectedItem","navigate","Id","console","log","__decorate","core_1","Input","Component","selector","styles","template","exports_1"],"mappings":"o8BAsBAA,kBAAA,WAOI,QAAAA,mBAAoBC,YAAkCC,QAAlCC,KAAAF,YAAAA,YAAkCE,KAAAD,OAAAA,OAoC1D,MAlCIF,mBAAAI,UAAAC,SAAA,WAAA,GAAAC,OAAAH,KAEQI,SAAW,IAEf,QAAQJ,KAAKK,OACT,IAAK,SACDL,KAAKM,MAAQ,eACbF,SAAWJ,KAAKF,YAAYS,WAC5B,MAEJ,KAAK,cACDP,KAAKM,MAAQ,oBACbF,SAAWJ,KAAKF,YAAYU,eAC5B,MAEJ,KAAK,SACDR,KAAKM,MAAQ,eACbF,SAAWJ,KAAKF,YAAYW,YAIpB,MAAZL,UACAA,SAASM,UAAU,SAAAC,OAAS,MAAAR,OAAKQ,MAAQA,OACrC,SAAAC,OAAS,MAAAT,OAAKU,aAAeD,SAKzCf,kBAAAI,UAAAa,SAAA,SAASC,MACLf,KAAKgB,aAAeD,KACpBf,KAAKD,OAAOkB,UAAU,YAAYjB,KAAKgB,aAAaE,KAEpDC,QAAQC,IAAI,WAAapB,KAAKgB,aAAaE,GAAK,uBApCpDG,YAACC,OAAAC,sFArBL1B,kBAAAwB,YAACC,OAAAE,WACGC,SAAU,YACVC,UACAC,SAAU,4YAadC,UAAA,oBAAA/B","file":"item-list.component.js","sourcesContent":["import { Component, OnInit, Input } from \"@angular/core\";\r\nimport {Router} from \"@angular/router\";\r\n\r\nimport { Item } from \"./item\";\r\nimport { ItemService } from \"./item.service\";\r\n\r\n@Component({\r\n    selector: \"item-list\",\r\n    styles: [],\r\n    template: `\r\n<h3>{{title}}</h3>\r\n<ul class=\"items\">\r\n    <li *ngFor=\"let item of items\"\r\n        [class.selected]=\"item === selectedItem\"\r\n        (click)=\"onSelect(item)\">\r\n        <div class=\"title\">{{item.Title}}</div>\r\n        <div class=\"description\">{{item.Description}}</div>\r\n    </li>\r\n</ul>\r\n`\r\n})\r\n\r\nexport class ItemListComponent implements OnInit {\r\n    selectedItem: Item;\r\n    items: Item[];\r\n    errorMessage: string;\r\n    title: string;\r\n    @Input() class: string;\r\n\r\n    constructor(private itemService: ItemService, private router:Router) { }\r\n\r\n    ngOnInit() {\r\n\r\n        var strategy = null;\r\n\r\n        switch (this.class) {\r\n            case \"latest\":\r\n                this.title = \"Latest Items\";\r\n                strategy = this.itemService.getLatest();\r\n                break;\r\n\r\n            case \"most-viewed\":\r\n                this.title = \"Most Viewed Items\";\r\n                strategy = this.itemService.getMostVieved();\r\n                break;\r\n\r\n            case \"random\":\r\n                this.title = \"Random Items\";\r\n                strategy = this.itemService.getRandom();\r\n                break;\r\n        }\r\n\r\n        if (strategy != null) {\r\n            strategy.subscribe(items => this.items = items,\r\n                error => this.errorMessage = error\r\n            );\r\n        }\r\n    }\r\n\r\n    onSelect(item: Item) {\r\n        this.selectedItem = item;\r\n        this.router.navigate([\"item/view\",this.selectedItem.Id]);\r\n\r\n        console.log(\"item id=\" + this.selectedItem.Id + \" has been selected\");\r\n    }\r\n}"],"sourceRoot":"/source/"}
{"version":3,"sources":["item-detail-edit.component.ts"],"names":["ItemDetailEditComponent","itemService","activatedRoute","router","authService","this","prototype","ngOnInit","_this","isLoggedIn","navigate","id","snapshot","params","get","subscribe","item","console","log","item_1","Item","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onItemDetailView","__decorate","core_1","Component","selector","styles","template","exports_1"],"mappings":"0lCAqEAA,wBAAA,WAGI,QAAAA,yBAAoBC,YAAkCC,eAAwCC,OAAwBC,aAAlGC,KAAAJ,YAAAA,YAAkCI,KAAAH,eAAAA,eAAwCG,KAAAF,OAAAA,OAAwBE,KAAAD,YAAAA,YAsD1H,MApDIJ,yBAAAM,UAAAC,SAAA,WAAA,GAAAC,OAAAH,IAESA,MAAKD,YAAYK,cACnBJ,KAAKF,OAAOO,UAAU,IAGzB,IAAIC,KAAMN,KAAKH,eAAeU,SAASC,OAAW,EAC9CF,KACAN,KAAKJ,YAAYa,IAAIH,IAChBI,UAAU,SAAAC,MAAQ,MAAAR,OAAKQ,KAAOA,OAEnCC,QAAQC,IAAIb,KAAKW,OAEL,IAAPL,GACLN,KAAKW,KAAO,GAAIG,QAAAC,KAAK,EAAG,WAAY,OAGpCH,QAAQC,IAAI,0CACZb,KAAKF,OAAOO,UAAU,OAI9BV,wBAAAM,UAAAe,SAAA,SAASL,MAAT,GAAAR,OAAAH,IACIA,MAAKJ,YAAYqB,IAAIN,MAChBD,UAAU,SAACQ,MACRf,MAAKQ,KAAOO,KACZN,QAAQC,IAAI,QAAUV,MAAKQ,KAAKQ,GAAK,UACrChB,MAAKL,OAAOO,UAAU,YAAaF,MAAKQ,KAAKQ,MAC9C,SAACC,OAAQ,MAAAR,SAAQC,IAAIO,UAGhCzB,wBAAAM,UAAAoB,SAAA,SAASV,MAAT,GAAAR,OAAAH,IACIA,MAAKJ,YAAY0B,OAAOX,MACnBD,UAAU,SAACQ,MACRf,MAAKQ,KAAOO,KACZN,QAAQC,IAAI,QAAUV,MAAKQ,KAAKQ,GAAK,YACrChB,MAAKL,OAAOO,UAAU,YAAYF,MAAKQ,KAAKQ,MAC7C,SAACC,OAAU,MAAAR,SAAQC,IAAIO,UAGlCzB,wBAAAM,UAAAsB,SAAA,SAASZ,MAAT,GAAAR,OAAAH,KACQM,GAAKK,KAAKQ,EACdnB,MAAKJ,YAAY4B,OAAOlB,IACnBI,UAAU,SAACQ,MACRN,QAAQC,IAAI,QAAUP,GAAK,YAC3BH,MAAKL,OAAOO,UAAU,MACvB,SAACe,OAAU,MAAAR,SAAQC,IAAIO,UAGlCzB,wBAAAM,UAAAwB,iBAAA,SAAiBd,MACbX,KAAKF,OAAOO,UAAU,YAAaM,KAAKQ,MArHhDxB,wBAAA+B,YAACC,OAAAC,WACGC,SAAU,mBACVC,UACAC,SAAU,iyGA2DdC,UAAA,0BAAArC","file":"item-detail-edit.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { Item } from \"./item\";\r\nimport { ItemService } from \"./item.service\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Component({\r\n    selector: \"item-detail-edit\",\r\n    styles: [],\r\n    template: `\r\n<div *ngIf=\"item\">\r\n    <h2>\r\n        <a href=\"javascript:void(0)\" (click)=\"onBack()\">\r\n            &laquo; Back to Home\r\n        </a>\r\n    </h2>\r\n    <div class=\"item-container\">\r\n        <ul class=\"nav nav-tabs\">\r\n            <li role=\"presentation\" class=\"active\">\r\n                <a href=\"javascript:void(0)\">Edit</a>\r\n            </li>\r\n            <li role=\"presentation\" *ngIf=\"item.Id !== 0\">\r\n                <a href=\"javascript:void(0)\" (click)=\"onItemDetailView(item)\">View</a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-body\">\r\n                <form class=\"item-detail-edit\" #thisForm=\"ngForm\">\r\n                    <h3>\r\n                        {{item.Title}}\r\n                        <span class=\"empty-field\" [hidden]=\"dTitle.valid\">\r\n                            Empty Title\r\n                        </span>\r\n                    </h3>\r\n                    <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': dTitle.valid, 'has-error': !dTitle.valid}\">\r\n                        <label for=\"input-title\">Title</label>\r\n                        <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"form-control\" [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\" required #dTitle=\"ngModel\" />\r\n                        <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': dTitle.valid, 'glyphicon-remove': !dTitle.valid}\"></span>\r\n                        <div [hidden]=\"dTitle.valid\" class=\"alert alert-danger\">\r\n                            You need to enter a valid Title.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-description\">Description</label>\r\n                        <textarea id=\"input-description\" name=\"input-description\" class=\"form-control\" [(ngModel)]=\"item.Description\" placeholder=\"Insert a suitable description...\" required></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"input-text\">Text</label>\r\n                        <textarea id=\"input-text\" name=\"input-text\" class=\"form-control\" [(ngModel)]=\"item.Text\" placeholder=\"Insert a suitable description...\"></textarea>\r\n                    </div>\r\n                    <div *ngIf=\"item.Id == 0\" class=\"commands insert\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Save\" (click)=\"onInsert(item)\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\" />\r\n                    </div>\r\n                    <div *ngIf=\"item.Id != 0\" class=\"commands update\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"Update\" (click)=\"onUpdate(item)\" />\r\n                        <input type=\"button\" class=\"btn btn-danger\" value=\"Delete\" (click)=\"onDelete(item)\" />\r\n                        <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onItemDetailView(item)\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n`\r\n})\r\n\r\nexport class ItemDetailEditComponent implements OnInit {\r\n    item: Item;\r\n\r\n    constructor(private itemService: ItemService, private activatedRoute: ActivatedRoute, private router: Router, private authService:AuthService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        if (!this.authService.isLoggedIn()) {\r\n           this.router.navigate([\"\"]);\r\n        }\r\n\r\n        var id = +this.activatedRoute.snapshot.params['id'];\r\n        if (id) {\r\n            this.itemService.get(id)\r\n                .subscribe(item => this.item = item);\r\n\r\n            console.log(this.item);\r\n        }\r\n        else if (id === 0) {\r\n            this.item = new Item(0, \"New item\", null);\r\n        } else {\r\n\r\n            console.log(\"invalid id - routing back to home page\");\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item)\r\n            .subscribe((data) => {\r\n                this.item = data;\r\n                console.log(\"item \" + this.item.Id + \" added\");\r\n                this.router.navigate([\"item/view\", this.item.Id]);\r\n            }, (error)=>console.log(error));\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item)\r\n            .subscribe((data) => {\r\n                this.item = data;\r\n                console.log(\"item \" + this.item.Id + \" updated\");\r\n                this.router.navigate([\"item/view\",this.item.Id]);\r\n            }, (error) => console.log(error));\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        var id = item.Id;\r\n        this.itemService.delete(id)\r\n            .subscribe((data) => {\r\n                console.log(\"item \" + id + \" deleted\");\r\n                this.router.navigate([\"\"]);\r\n            }, (error) => console.log(error));\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n        this.router.navigate([\"item/view\", item.Id]);\r\n    }\r\n}"],"sourceRoot":"/source/"}